<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>南方周末2022新年献词</title>
      <link href="/2021/12/29/%E5%8D%97%E6%96%B9%E5%91%A8%E6%9C%AB2022%E6%96%B0%E5%B9%B4%E7%8C%AE%E8%AF%8D/"/>
      <url>/2021/12/29/%E5%8D%97%E6%96%B9%E5%91%A8%E6%9C%AB2022%E6%96%B0%E5%B9%B4%E7%8C%AE%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="落字无悔，抉择本身就是向前"><a href="#落字无悔，抉择本身就是向前" class="headerlink" title="落字无悔，抉择本身就是向前"></a>落字无悔，抉择本身就是向前</h1><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxufia707ij30qo0hsabq.jpg" alt="2021年12月10日8时11分，实践六号05组卫星发射升空。 （新华社 汪江波/图）"></p><p>没有谁想到，为这一年中国人的日常留下最真实画像的，是一份份“流调”。</p><p>52岁的绍兴出租车司机，多日里每天跑车20小时；出差徐州的男人，日复一日调试设备，晚上吃麦当劳十分钟度过44岁生日；45岁的南京妈妈，除在机场做保洁外，其余全部是带孩子去各种培训班的足迹；35岁的爸爸，晚上在东莞居住，早上送完孩子后又大巴连地铁赶去深圳打工；沈阳大爷的鸡架子、广州阿婆的早茶、扬州天天麻将馆、云南多位八旬老人旅游到内蒙古额济纳旗，让疫中生活现出地方风情；而瑞丽居民的困顿、伊犁游客的窘迫、西安全城的封控，让人耿耿，有如身受……</p><p>那些粗粝的细节，那些奋力生活的轨迹，那些单调重复里的爱、责任和坚韧，真实映照着一个个普通中国人的日常，比滚动播报的全球新冠疫情数字更加牵动人心。</p><p>但疫情终究改变了每一个人的日常，时间之矢已无法倒转，世界再也回不到从前。多少坚固的东西都在烟消云散啊，那些耳边响起的崩裂声，仿佛低徊于时光深处的惊雷。</p><p>旧的一页悄然翻篇，没有正式道别。新的世界加速拼图，不会友情提示。普罗大众的日常之上，是与新冠疫情相迭的百年变局在交织演变，历史正在流淌、奔腾、冲刷，淘荡出新的河床，镌刻出新的走向。</p><p>外太空空间站新建起“三室一厅”，元宇宙模糊了虚拟与现实，时空概念在多个维度被刷新；“史上最大龙卷风”，“千年一遇暴雪”，纽约首遇暴洪，欧洲最热夏天，全球气候极端化让现实世界运行逻辑难以为继；中东难民冲击脆弱的欧洲联盟，美军急切飞离阿富汗泥潭，俄乌竞相屯兵，巴以飞弹对决，大国角力让全球关系空前承压。</p><p>陌生的图景，陌生的语言，陌生的节奏，可谁能阻止这滚滚大潮？猎猎风起，我们已站在百年未有之大时代路口。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxufiy0dt2j30qo0hstbn.jpg" alt="2021年11月28日，山东省烟台市一处海滨沙滩，一队晨练的大学生正在跑步。 （视觉中国/图）"></p><p>何处是生门，何方有出路？谁能争得先机，谁能笑到最后？唯主动破局，果断开局，抉方向，择先机，方能萃取绵绵不断的力量。</p><p>抉择当先，要在当下。</p><p>抉择是亘古至今的召唤，谛听着生命固有的咏叹。君子居易以俟命，小人行险以徼幸。</p><p>抉择是坚忍持久的爱，是为自己为亲人为路人为家与国的明天筹谋。</p><p>抉择是责任担当，是纵然身在沙漠，也要变身骆驼，不为鸵鸟。</p><p>抉择是勇气，是直面惨淡后的奋起，是横下心接纳陌生、改变和结果。</p><p>抉择是较量，是狠狠扼住命运的咽喉而且还要以堂堂正正的姿势。</p><p>抉择是新生，是涅槃后更为强壮的灵魂，是摧枯拉朽、洗髓换骨后的轻盈如燕，是从悲观中升华出的达观，是最终化成的不老青山。</p><p>人之抉择，难以处处顺滑，但求不做浮萍。而每一个你我，绝不躺平，绝不由天，要努力在时代与命运的罗盘上刻下印记，以千万个一粟聚成洪流，汇于沧海。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxufj7mpqtj30qo0ezagc.jpg" alt="江西省九江市湖口县均桥镇新庄村三组村民正在晾晒刚刚收割的晚稻。 （IC photo/图）"></p><p>回望这一年，百年前那艘红船上的抉择，为中华民族带来第一个百年奋斗目标的实现、第二个百年奋斗新征程的启航；“共同富裕”浙江示范，“三次分配”全网流行；新选制香港落地，个人信息保护、反垄断纷纷亮剑；房产税试点已楼梯吱嘎响，“双碳”承诺描绘出绿水青山；“全面三孩”光速落地，“双减政策”重磅出击；互联网告别狂飙突进，“劣迹艺人”一夜褪尽光环……</p><p>也许，要到10年、30年或者50年后，这些大事件大抉择的所有意蕴才能完全彰显，但你我皆已是局中人。每一个人既被抉择，又在抉择。就在眼前，就在此时。</p><p>抉择当然有代价，尤在这巨变的当下。抉择重如千钧，更需要有心者不抛弃、有力者不放弃，一起扛起时代的那粒灰。</p><p>你有你的抉择，我有我的抉择，家有家的抉择，国有国的抉择，文明有文明的抉择，历史有历史的抉择。亿万个抉择汇聚，世界方显参差多样，宇宙才真正博大浩渺。但无论大小，每一次抉择，都是一次主动求变，都期待一场苦尽甘来。正如每一棵破土的新芽，都带着穿透时光的倔强。</p><p>在这条路上，我们守望相助，给灰心者做光，给失味者做盐。让软弱者挺起胸膛，让畏葸者不再彷徨，帮失意者重拾信心，向溺水者伸手施援，给悲恸者抚慰拥抱，令疲惫者沉入酣眠，为无家可归者提供最后的依靠。这是我们共同的抉择。</p><p>落子无悔，抉择本身就是向前。</p><p>从一个变局闯入另一个变局，从一个时空通关到另一个时空，抉择难分福祸，但求无愧天地；抉择无论成败，背影自带光芒。</p><p>虽千万人，吾往矣！</p><p>愿这一刻，时雪洗去尘垢，惠风拂走阴翳。沐浴和煦阳光，聆听万物呼吸。时光酿成甘酒，属于每一个正奋斗抉择的你。</p><p>祝你新年快乐。</p>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构体</title>
      <link href="/2021/12/27/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
      <url>/2021/12/27/%E7%BB%93%E6%9E%84%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><h2 id="声明结构体"><a href="#声明结构体" class="headerlink" title="声明结构体"></a>声明结构体</h2><ol><li><p>基本类型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">complex</span>&#123;</span>       <span class="comment">//complex为新类型名称</span></span><br><span class="line">    <span class="keyword">double</span> real;</span><br><span class="line">    <span class="keyword">double</span> image;</span><br><span class="line">&#125;;<span class="comment">//复数</span></span><br></pre></td></tr></table></figure></li><li><p>数组类型    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;;<span class="comment">//学生信息</span></span><br></pre></td></tr></table></figure></li><li><p>结构体类型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">      <span class="keyword">int</span> value;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> <span class="title">node</span>*<span class="title">next</span>;</span><span class="comment">//结构体变量内存未知，而指针变量内存一定为4个     字节，不能用struct node next;</span></span><br><span class="line">&#125;;<span class="comment">//链表</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="定义结构体变量"><a href="#定义结构体变量" class="headerlink" title="定义结构体变量"></a>定义结构体变量</h2><ol><li><p>定义结构体时声明变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;st1,st2;</span><br></pre></td></tr></table></figure></li><li><p>在程序其他地方声明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">st1</span>,<span class="title">st2</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">st3</span>[10];</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>typedef</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;STU;<span class="comment">//typedef也可用于定义基本类型，如unsigned int</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    STU st1,st2;</span><br><span class="line">    STU st3[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="结构体嵌套"><a href="#结构体嵌套" class="headerlink" title="结构体嵌套"></a>结构体嵌套</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">        <span class="keyword">int</span> year;<span class="comment">//引用时即为STU.birthday.year</span></span><br><span class="line">        <span class="keyword">int</span> month;</span><br><span class="line">        <span class="keyword">int</span> day;</span><br><span class="line">    &#125;birthday;</span><br><span class="line">&#125;STU;  <span class="comment">//STU为typedef定义的简单名称</span></span><br><span class="line"><span class="comment">//是不是觉得有点怪怪的 因为我把struct后面的定义类型名省略了，加不加都可（之前不可以省略是因为需要用类型名去声明变量，但现在已经有STU这样的名称可以定义变量了）</span></span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ol><li><p>逐一初始化每个成员(定义完变量之后)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">student st;</span><br><span class="line"><span class="built_in">strcpy</span>(st.id,<span class="string">&quot;03101001&quot;</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(st.name,<span class="string">&quot;jky&quot;</span>);</span><br><span class="line">st.score=<span class="number">100</span>;</span><br></pre></td></tr></table></figure></li><li><p>整体初始化（只可在定义变量时使用）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student st=&#123;<span class="string">&quot;03101001&quot;</span>,<span class="string">&quot;jky&quot;</span>,<span class="number">100</span>&#125;;</span><br><span class="line">student st=&#123;<span class="string">&quot;03101001&quot;</span>,<span class="string">&quot;jky&quot;</span>&#125;;<span class="comment">//未赋予则score为0，详见下方补充</span></span><br></pre></td></tr></table></figure></li></ol><table><thead><tr><th>变量类型</th><th>默认值</th></tr></thead><tbody><tr><td>char</td><td>‘\0’</td></tr><tr><td>string</td><td>‘’ 或者NULL</td></tr><tr><td>bool</td><td>False</td></tr><tr><td>指针</td><td>char*为’’或者NULL；其他为0</td></tr><tr><td>int</td><td>0</td></tr></tbody></table><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><p>利用=（赋值运算符）</p><ul><li>成员是基本类型，数组：值复制</li><li>成员是指针：地址复制    结果为<strong>两个结构体变量的成员指向同一个内存</strong> </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student st1=&#123;<span class="string">&quot;01&quot;</span>,<span class="string">&quot;xiaoli&quot;</span>,<span class="number">90</span>&#125;,st2=&#123;<span class="string">&quot;02&quot;</span>&#125;;</span><br><span class="line">st2=st1;</span><br></pre></td></tr></table></figure><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>格式：结构体变量.成员名称</p><h2 id="结构体指针变量"><a href="#结构体指针变量" class="headerlink" title="结构体指针变量"></a>结构体指针变量</h2><h3 id="定义指针变量"><a href="#定义指针变量" class="headerlink" title="定义指针变量"></a>定义指针变量</h3><p>格式：结构体类型.成员名称</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">point pt1=&#123;<span class="number">10</span>,<span class="number">10</span>&#125;;</span><br><span class="line">point *p=&amp;pt1;</span><br></pre></td></tr></table></figure><h3 id="引用所指向结构体变量的成员"><a href="#引用所指向结构体变量的成员" class="headerlink" title="引用所指向结构体变量的成员"></a>引用所指向结构体变量的成员</h3><ol><li>先取结构体变量再访问</li></ol><p><code> (*p).x=20</code></p><ol start="2"><li>专用运算符-&gt;</li></ol><p><code>p-&gt;x=20;</code></p><h1 id="结构体与函数"><a href="#结构体与函数" class="headerlink" title="结构体与函数"></a>结构体与函数</h1><h2 id="结构体类型作为函数返回值"><a href="#结构体类型作为函数返回值" class="headerlink" title="结构体类型作为函数返回值"></a>结构体类型作为函数返回值</h2><ul><li>可返回一个<strong>逻辑整体</strong> 即多个值</li><li>可整体赋值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">&#125;point;</span><br><span class="line"><span class="function">point <span class="title">input_point</span><span class="params">()</span></span>&#123;</span><br><span class="line">    point pt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;pt.x,&amp;pt.y);</span><br><span class="line">    <span class="keyword">return</span> pt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    point pt1=input_point();</span><br><span class="line">    point pt2=input_point();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体类型作为函数形式参数"><a href="#结构体类型作为函数形式参数" class="headerlink" title="结构体类型作为函数形式参数"></a>结构体类型作为函数形式参数</h2><p>注意：若函数目的为更改所定义结构体变量，即实参，应使用指针形式结构体变量</p><p>原因：若使用非指针形式的结构体类型参数，相当于将实参赋值给形参，实参不变；而如果为指针类型，则形参和实参指向同一结构体，实参可被修改。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(point *pt,<span class="keyword">int</span> dx,<span class="keyword">int</span> dy)</span></span>&#123;</span><br><span class="line">  pt-&gt;x+=dx;</span><br><span class="line">  pt-&gt;y+=dy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>多关键字排序函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(student st1,student st2)</span></span>&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(student sts[],<span class="keyword">int</span> n)</span><span class="comment">//数组类型本质上就是指针</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> k=i,j=<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">         <span class="keyword">if</span>(compare(st[j],st[k])&gt;<span class="number">0</span>) k=j;</span><br><span class="line">         &#125;<span class="comment">//比较</span></span><br><span class="line">           <span class="keyword">if</span>(k!=i)&#123;</span><br><span class="line">             student st=sts[i];</span><br><span class="line">             sts[i]=sts[k];</span><br><span class="line">             sts[k]=st;</span><br><span class="line">      &#125;<span class="comment">//交换</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/20/hello-world/"/>
      <url>/2021/12/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
